apiVersion: apps/v1
kind: Deployment
metadata:
  name: sparksbooks-server
  namespace: web
spec:
  selector:
    matchLabels:
      run: sparksbooks-server
  template:
    metadata:
      labels:
        run: sparksbooks-server
    spec:
      serviceAccountName: sparksbook-backend
      volumes:
        - name: secrets
          emptyDir: { }
      initContainers:
        - name: secrets-init
          image: google/cloud-sdk:slim
          command:
            - sh
          args:
            - -c
            - "gcloud secrets versions access 1 --secret=test-cluster-db-secrets > /secrets/env"
          volumeMounts:
            - mountPath: /secrets/
              name: secrets
      containers:
      - image: gcr.io/pdf-scanner-346920/sparksbook-app/sparksbooks-server:a5457aec22e928a2d8fc7b35c6484be9e0e12e64
        imagePullPolicy: IfNotPresent
        name: sparksbooks-server
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
        env:
        - name: "APP_PORT"
          value: "8080"
        ports:
        - containerPort: 8080
          protocol: TCP
        volumeMounts:
          - mountPath: /secrets/
            name: secrets
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sparksbooks-frontend
  namespace: web
spec:
  selector:
    matchLabels:
      run: sparksbooks-frontend
  template:
    metadata:
      labels:
        run: sparksbooks-frontend
    spec:
      containers:
      - image: gcr.io/pdf-scanner-346920/sparksbook-app/sparksbooks-frontend:a5457aec22e928a2d8fc7b35c6484be9e0e12e64
        imagePullPolicy: IfNotPresent
        name: sparksbooks-frontend
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
        env:
        - name: "APP_PORT"
          value: "8081"
        - name: "PORT"
          value: "8081"
        ports:
        - containerPort: 8081
          protocol: TCP
